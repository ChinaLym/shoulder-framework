# 参考： https://ffis.me/archives/2213.html
kind: pipeline
name: default

#workspace:
# 公共区域
#  base: /step-common-disk
# git clone 位置
#  path: /test

clone:
  # 不需要拉取 commit 历史，加快速度
  depth: 1
  # 需要 clone
  disable: false


steps:
  #  - name: 发现SNAPSHOT依赖
  #    image: cnlym/maven:3-jdk-11-alpine-aliyun
  #    commands:
  #      - mvn dependency:tree -Dincludes=:::*-SNAPSHOT
  #      - echo 'FINISHED dependencyCheck!'
  # 自动化升级依赖项目版本号到release版本
  #      # mvn versions:use-releases
  #      # mvn versions:use-next-releases
  #      # mvn versions:use-latest-releases
  #      # mvn versions:display-dependency-updates

  - name: 编译、打包、发布到 maven 仓库
    image: cnlym/maven:3-jdk-11-alpine-aliyun
    # 加速，对于这种稳定的容器
    pull: if-not-exists
    commands:
      # 异步快速检查依赖
      - curl --location --request POST 'http://10.10.10.1:12345/projects/create' --form 'email=cn_lym@foxmail.com' --form 'pomXml=@shoulder-dependencies/pom.xml' --form 'notifyInstantlyAfterCheck=true' --form 'notifyReason=CI-<a href="https://git.itlym.cn/gogs/${DRONE_REPO_NAME}">${DRONE_REPO_NAME}::${DRONE_REPO_BRANCH}</a><br> with <a href="https://drone.itlym.cn/gogs/${DRONE_REPO_NAME}/${DRONE_BUILD_NUMBER}">Drone Build-${DRONE_BUILD_NUMBER}</a><br>'
      #      - mvn clean install -Dmaven.test.skip=true -pl shoulder-dependencies -am
      #      - mvn clean install -Dmaven.test.skip=true -pl shoulder-parent -am
      #- sudo export MAVEN_OPTS="-Xmx400m -Xms400m -XX:MaxPermSize=90m"
      # 2C 每个可用 C 2线程；deploy 主要是发布，与网络相关，-T 4 4个线程 -B batch 批量处理 -V Display version information
      # 改成部署前签名，否则不会上传
      - sed -i 's#<phase>deploy</phase><!-- ACTIVE_WITH_package -->#<phase>package</phase><!-- ACTIVE_WITH_package -->#g' pom.xml
      - sed -i 's#<phase>deploy</phase><!-- ACTIVE_WITH_package -->#<phase>package</phase><!-- ACTIVE_WITH_package -->#g' shoulder-parent/pom.xml
      - sed -i 's#<phase>deploy</phase><!-- ACTIVE_WITH_verify -->#<phase>verify</phase><!-- ACTIVE_WITH_verify -->#g' pom.xml
      - sed -i 's#<phase>deploy</phase><!-- ACTIVE_WITH_verify -->#<phase>verify</phase><!-- ACTIVE_WITH_verify -->#g' shoulder-parent/pom.xml
      - mvn clean deploy -P release -Dmaven.test.skip=true -B -V -T 1C
      - echo 'FINISHED deploy!!'
#
      #  - name: 根据 commit 自动生成 CHANGELOG、README https://github.com/mbinary-toys/csdn-tools
      # - https://github.com/crawlab-team/artipub
#    image: cnlym/maven:3-jdk-11-alpine-aliyun
#    commands:
#      - echo 'mock autogenerate changeLog!'
#
#  - name: 在CSDN、OSCHINA发文章宣布发布一个新版本
#    image: cnlym/maven:3-jdk-11-alpine-aliyun
#    commands:
#      - echo 'mock autogenerate new version blog!'
#
#  - name: 创建此版本的维护分支（创建一个新分支，并更新到下一个次版本）
#    image: cnlym/maven:3-jdk-11-alpine-aliyun
#    commands:
      #- git -branch 新分支
      #- git 修改版本号
      #- git push
#      - echo 'mock autogenerate maintain branch!'
#
#  - name: 在官网，start上添加该版本
#    image: cnlym/maven:3-jdk-11-alpine-aliyun
#    commands:
#      - echo 'mock notify Official website!'
#
#  - name: 在GitHub上更新发行说明，有哪些新特性，修复了哪些bug(issue号)，感谢该版本的参与者
#    image: cnlym/maven:3-jdk-11-alpine-aliyun
#    commands:
#      - echo 'mock notify Official website!'
#
#  - name: 关闭/创建里程碑、标签。TODO spring 开源的 label robot
#    image: cnlym/maven:3-jdk-11-alpine-aliyun
#    commands:
#      - echo 'mock close issue!'
#
#  - name: 分支清理，删掉里程碑内的无用分支，包括开发分支，发布分支
#    image: cnlym/maven:3-jdk-11-alpine-aliyun
#    commands:
#      - echo 'mock delete useless branch!'
#
#  - name: 在其他频道、社交平台上宣布发行
#    image: cnlym/maven:3-jdk-11-alpine-aliyun
#    commands:
#      - echo 'mock announcement of issuance!'
#
#  - name: 钉钉通知、微信通知构建结果
#    image: guoxudongdocker/drone-dingtalk
#    settings:
#      token: 5f6c32b36e771df227b1ccb8898325158e12d851ae61982d1ec225a1aa58e251
#      type: markdown

trigger:
  branch:
    - master
  event:
    - push
